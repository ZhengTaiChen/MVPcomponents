apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]

    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

}


dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    //support
    api(rootProject.ext.dependencies["support-v4"]) {
        exclude module: 'support-annotations'
    }
    api(rootProject.ext.dependencies["appcompat-v7"]) {
        exclude module: 'support-annotations'
    }
    compileOnly rootProject.ext.dependencies["design"]
    api(rootProject.ext.dependencies["recyclerview-v7"]) {
        exclude module: 'support-annotations'
    }
    annotationProcessor rootProject.ext.dependencies["annotations"]

    api(rootProject.ext.dependencies["picasso"]) {
        exclude module: 'support-annotations'
        exclude module: 'support-fragment'
    }

    //view

    api(rootProject.ext.dependencies["butterknife"]) {
        exclude module: 'support-annotations'
        exclude module: 'support-compat'
    }

    //rx
    api rootProject.ext.dependencies["rxjava2"]
    api(rootProject.ext.dependencies["rxandroid2"]) {
        exclude module: 'rxjava'
    }
    api(rootProject.ext.dependencies["rxcache2"]) {
        exclude module: 'rxjava'
        exclude module: 'dagger'
        exclude module: 'api'
    }
    implementation(rootProject.ext.dependencies["rxcache-jolyglot-gson"]) {
        exclude module: 'gson'
    }
    api(rootProject.ext.dependencies["rxlifecycle3"]) {
        exclude module: 'rxjava'
        exclude module: 'jsr305'
    }
    api(rootProject.ext.dependencies["rxlifecycle3-android"]) {
        exclude module: 'support-annotations'
        exclude module: 'rxjava'
        exclude module: 'rxandroid'
        exclude module: 'rxlifecycle'
    }
    api rootProject.ext.dependencies["rxpermissions2"]
    api rootProject.ext.dependencies['rxerrorhandler2']

    //network
    api(rootProject.ext.dependencies["retrofit"]) {
        exclude module: 'okhttp'
        exclude module: 'okio'
    }
    implementation(rootProject.ext.dependencies["retrofit-converter-gson"]) {
        exclude module: 'gson'
        exclude module: 'okhttp'
        exclude module: 'okio'
        exclude module: 'retrofit'
    }
    implementation(rootProject.ext.dependencies["retrofit-adapter-rxjava2"]) {
        exclude module: 'rxjava'
        exclude module: 'okhttp'
        exclude module: 'retrofit'
        exclude module: 'okio'
    }
    api rootProject.ext.dependencies["okhttp3"]
    compileOnly rootProject.ext.dependencies["glide"]
    annotationProcessor(rootProject.ext.dependencies["glide-compiler"]) {
        exclude module: 'jsr305'
    }

    //tools
    compileOnly rootProject.ext.dependencies["javax.annotation"]
    api rootProject.ext.dependencies["dagger2"]
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    compileOnly rootProject.ext.dependencies["androideventbus"]
    compileOnly rootProject.ext.dependencies["eventbus"]
    api rootProject.ext.dependencies["gson"]
    api rootProject.ext.dependencies["design"]

    //test
    api rootProject.ext.dependencies["timber"]
//    api rootProject.ext.dependencies["logger"]
    testImplementation rootProject.ext.dependencies["junit"]
    //tools
    api(rootProject.ext.dependencies["arouter_api"]) {
        exclude module: 'support-v4'
        exclude module: 'support-annotations'
    }
    api rootProject.ext.dependencies["retrofit-url-manager"]
    api rootProject.ext.dependencies["multidex"]
    api rootProject.ext.dependencies["banner"]
    api rootProject.ext.dependencies["AdapterHelper"]
    api rootProject.ext.dependencies["FlycoTabLayout"]
    api rootProject.ext.dependencies["constraint-layout"]
    api rootProject.ext.dependencies["RxUI"]
    api rootProject.ext.dependencies["RxKit"]
    api(rootProject.ext.dependencies["RxFeature"]) {
        exclude module: 'com.google.zxing'
    }
    api rootProject.ext.dependencies["autosize"]
    api rootProject.ext.dependencies["immersionbar"]
    api rootProject.ext.dependencies["MPAndroidChart"]
    api rootProject.ext.dependencies["Luban"]
    api 'com.squareup.retrofit2:converter-scalars:2.5.0'
    api rootProject.ext.dependencies["SmartRefreshLayout"]
    api rootProject.ext.dependencies["UpdatePlugin"]
    api(rootProject.ext.dependencies["hotfix"]) {
        exclude module: 'alicloud-android-utdid'
        exclude module: 'support-v4'
        exclude module: 'support-annotations'
    }
    api rootProject.ext.dependencies["umeng-analytics"]
    api rootProject.ext.dependencies["umeng-common"]
    api rootProject.ext.dependencies["loadsir"]

}
